//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApiPort.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LocalizedStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LocalizedStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ApiPort.Resources.LocalizedStrings", typeof(LocalizedStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API Portability Analyzer.
        /// </summary>
        internal static string ApplicationName {
            get {
                return ResourceManager.GetString("ApplicationName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available Aliases:.
        /// </summary>
        internal static string AvailableAliases {
            get {
                return ResourceManager.GetString("AvailableAliases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available Grouped Targets:.
        /// </summary>
        internal static string AvailableGroupedTargets {
            get {
                return ResourceManager.GetString("AvailableGroupedTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available output formats:.
        /// </summary>
        internal static string AvailableOutputFormats {
            get {
                return ResourceManager.GetString("AvailableOutputFormats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available Targets:.
        /// </summary>
        internal static string AvailableTargets {
            get {
                return ResourceManager.GetString("AvailableTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description of submission.
        /// </summary>
        internal static string CmdAnalyzeDescription {
            get {
                return ResourceManager.GetString("CmdAnalyzeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path to assembly file or directory of assemblies.
        /// </summary>
        internal static string CmdAnalyzeFileInput {
            get {
                return ResourceManager.GetString("CmdAnalyzeFileInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies a json file defining assemblies that should not be analyzed for specific targets while analyzing breaking changes. This can be useful for excluding assemblies that are known to not regress on certain .NET Framework versions due to breaking changes. Note that, currently, this parameter only affects breaking change analysis and not portability analysis[.
        /// </summary>
        internal static string CmdAnalyzeIgnoreAssembliesFile {
            get {
                return ResourceManager.GetString("CmdAnalyzeIgnoreAssembliesFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzes specified files/directories for IL and determines the APIs that are used. This information is analyzed for portability concerns or known breaking changes (depending on input parameters) and returns a report that gives a summary of issues and possible steps forward..
        /// </summary>
        internal static string CmdAnalyzeMessage {
            get {
                return ResourceManager.GetString("CmdAnalyzeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not use the standard assembly ignore list when analyzing breaking changes. The default ignore list can be found at KnownSafeBreaks.json.
        /// </summary>
        internal static string CmdAnalyzeNoDefaultIgnoreFile {
            get {
                return ResourceManager.GetString("CmdAnalyzeNoDefaultIgnoreFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output file name.
        /// </summary>
        internal static string CmdAnalyzeOutputFileName {
            get {
                return ResourceManager.GetString("CmdAnalyzeOutputFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Format to display output results.
        /// </summary>
        internal static string CmdAnalyzeResultFormat {
            get {
                return ResourceManager.GetString("CmdAnalyzeResultFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculate breaking changes on full .NET Framework.
        /// </summary>
        internal static string CmdAnalyzeShowBreakingChanges {
            get {
                return ResourceManager.GetString("CmdAnalyzeShowBreakingChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include the Apis that may throw PlatformNotSupported or NotImplemented exceptions.
        /// </summary>
        internal static string CmdAnalyzeShowExceptionApis {
            get {
                return ResourceManager.GetString("CmdAnalyzeShowExceptionApis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculate non-portable APIs.
        /// </summary>
        internal static string CmdAnalyzeShowNonPortableApis {
            get {
                return ResourceManager.GetString("CmdAnalyzeShowNonPortableApis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include the retargetting issues in the reports.
        /// </summary>
        internal static string CmdAnalyzeShowRetargettingIssues {
            get {
                return ResourceManager.GetString("CmdAnalyzeShowRetargettingIssues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies a breaking change (by ID) to suppress during breaking change analysis. Any breaking changes with IDs specified for suppression will not be reported..
        /// </summary>
        internal static string CmdAnalyzeSuppressBreakingChange {
            get {
                return ResourceManager.GetString("CmdAnalyzeSuppressBreakingChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target against which to check portability.
        /// </summary>
        internal static string CmdAnalyzeTarget {
            get {
                return ResourceManager.GetString("CmdAnalyzeTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies a file to be use to map target names.
        /// </summary>
        internal static string CmdAnalyzeTargetMap {
            get {
                return ResourceManager.GetString("CmdAnalyzeTargetMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides an interactive console search for APIs. Useful to find the docid of a specific API.
        /// </summary>
        internal static string CmdDocId {
            get {
                return ResourceManager.GetString("CmdDocId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Write the analysis request to the output file without sending any data to the service.
        /// </summary>
        internal static string CmdDumpAnalysis {
            get {
                return ResourceManager.GetString("CmdDumpAnalysis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Portability service endpoint.
        /// </summary>
        internal static string CmdEndpoint {
            get {
                return ResourceManager.GetString("CmdEndpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application that will be run after porting.
        /// </summary>
        internal static string CmdEntrypoint {
            get {
                return ResourceManager.GetString("CmdEntrypoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote server indicated that the previous request was forbidden. Please provide credentials for: {0}.
        /// </summary>
        internal static string Credentials_ForbiddenCredentials {
            get {
                return ResourceManager.GetString("Credentials_ForbiddenCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password:.
        /// </summary>
        internal static string Credentials_Password {
            get {
                return ResourceManager.GetString("Credentials_Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide proxy credentials:.
        /// </summary>
        internal static string Credentials_ProxyCredentials {
            get {
                return ResourceManager.GetString("Credentials_ProxyCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide credentials for: {0}.
        /// </summary>
        internal static string Credentials_RequestCredentials {
            get {
                return ResourceManager.GetString("Credentials_RequestCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username:.
        /// </summary>
        internal static string Credentials_UserName {
            get {
                return ResourceManager.GetString("Credentials_UserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyze request file output does not support this operation.
        /// </summary>
        internal static string FileOutputServiceNotSupported {
            get {
                return ResourceManager.GetString("FileOutputServiceNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft (R) {0} v{1}
        ///Copyright (C) Microsoft Corporation. All rights reserved.
        ///
        ///This tool analyzes .NET assemblies to determine possible problems moving between .NET platforms (such as
        ///Windows Store, desktop, Mono, .NET Core, etc) as well as between .NET Framework versions (ie 4.x-&gt;4.y).
        ///
        ///To learn more about how this tool works, including the data we are collecting, visit {2}.
        ///
        ///For the full privacy statement, please visit {3}.
        /// </summary>
        internal static string Header {
            get {
                return ResourceManager.GetString("Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use to see what output formats are supported for the generated report..
        /// </summary>
        internal static string ListOutputFormats {
            get {
                return ResourceManager.GetString("ListOutputFormats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use to see the available targets against which you can validate your assemblies.
        /// </summary>
        internal static string ListTargets {
            get {
                return ResourceManager.GetString("ListTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you are running on the mono runtime, you must configure root certificates before using this application.  Please see http://www.mono-project.com/docs/faq/security/.
        /// </summary>
        internal static string MonoWebRequestsFailure {
            get {
                return ResourceManager.GetString("MonoWebRequestsFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to number.
        /// </summary>
        internal static string Number {
            get {
                return ResourceManager.GetString("Number", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrote output to file:.
        /// </summary>
        internal static string OutputWrittenTo {
            get {
                return ResourceManager.GetString("OutputWrittenTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replaced output file &quot;{0}&quot;.
        /// </summary>
        internal static string OverwriteFile {
            get {
                return ResourceManager.GetString("OverwriteFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Done].
        /// </summary>
        internal static string ProgressReportDone {
            get {
                return ResourceManager.GetString("ProgressReportDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Failed].
        /// </summary>
        internal static string ProgressReportFailed {
            get {
                return ResourceManager.GetString("ProgressReportFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [In Progress{0}].
        /// </summary>
        internal static string ProgressReportInProgress {
            get {
                return ResourceManager.GetString("ProgressReportInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a search query to find possible docids..
        /// </summary>
        internal static string ReplEnterQuery {
            get {
                return ResourceManager.GetString("ReplEnterQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid number: &apos;{0}&apos;.
        /// </summary>
        internal static string ReplInvalidNumber {
            get {
                return ResourceManager.GetString("ReplInvalidNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not find anything for search &apos;{0}&apos;.
        /// </summary>
        internal static string ReplNoResultsFound {
            get {
                return ResourceManager.GetString("ReplNoResultsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #count=.
        /// </summary>
        internal static string ReplOptionCount {
            get {
                return ResourceManager.GetString("ReplOptionCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display [number] of search results..
        /// </summary>
        internal static string ReplOptionCount_Text {
            get {
                return ResourceManager.GetString("ReplOptionCount_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #q.
        /// </summary>
        internal static string ReplOptionExit {
            get {
                return ResourceManager.GetString("ReplOptionExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit the REPL..
        /// </summary>
        internal static string ReplOptionExit_Text {
            get {
                return ResourceManager.GetString("ReplOptionExit_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options:.
        /// </summary>
        internal static string ReplOptionsHeader {
            get {
                return ResourceManager.GetString("ReplOptionsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updated count to {0}.
        /// </summary>
        internal static string ReplUpdatedCount {
            get {
                return ResourceManager.GetString("ReplUpdatedCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description:.
        /// </summary>
        internal static string TargetsDescription {
            get {
                return ResourceManager.GetString("TargetsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - {0} ({1}).
        /// </summary>
        internal static string TargetsListGrouped {
            get {
                return ResourceManager.GetString("TargetsListGrouped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - {0}.
        /// </summary>
        internal static string TargetsListNoVersion {
            get {
                return ResourceManager.GetString("TargetsListNoVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name:.
        /// </summary>
        internal static string TargetsName {
            get {
                return ResourceManager.GetString("TargetsName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Versions:.
        /// </summary>
        internal static string TargetsVersion {
            get {
                return ResourceManager.GetString("TargetsVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to specify a target, run the tool with the following command switch:
        ///     ApiPort.exe analyze -t &quot;(Target Name)&quot; [other args]
        ///
        ///In order to specify a version, please specify a target and a version with the following switch:
        ///     ApiPort.exe analyze -t &quot;(Target Name), Version=(Version)&quot; [other args]
        ///
        ///Versions marked with an asterisk (*) implies that these are default targets if none are submitted..
        /// </summary>
        internal static string TargetUsage {
            get {
                return ResourceManager.GetString("TargetUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an unexpected error.  Please try again or contact apiport@microsoft.com for help..
        /// </summary>
        internal static string UnknownException {
            get {
                return ResourceManager.GetString("UnknownException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ; .
        /// </summary>
        internal static string VersionListJoin {
            get {
                return ResourceManager.GetString("VersionListJoin", resourceCulture);
            }
        }
    }
}
